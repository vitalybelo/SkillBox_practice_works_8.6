#include <iostream>
#include <cmath>

using namespace std;

int main() {
    setlocale(LC_ALL, "Russian_Russia.1251");

    // Стою на асфальте в лыжи обутый ... дальше понятно ))
    // ЗАДАНО:
    // уровень опасности для черепашьих яиц рассчитывается по формуле
    // D = x^3 − 3x^2 − 12x + 10, где x — глубина кладки в метрах,
    // а D — уровень опасности в условных единицах

    // !!! Строго математически значение опасности = равно
    // полному нулю на глубине = 5 метром:
    // D = 5^3 - 3*5^2 - 12*5 + 10 = 125 - 75 + 60 + 10 = 0
    // лучшего решения не найти никогда (или формула другая)
    // Рекомендации по выполнению
    // Отрицательный уровень опасности — это тоже плохо.
    // Нужно найти наиболее близкий к нулю уровень опасности.
    // ОТВЕТ = 5
    // в примере решения:
    // Введите максимально допустимый уровень опасности: 0,01
    // Приблизительная глубина безопасной кладки: 0,732422 метра
    // значение D при такой глубине = -0.0054884 !!!
    // хотя лучшее решение должно было быть = 0.0051862 (глубина 0.7317)
    //
    // Тогда мы попробуем поискать между 0 и 4 метрами лучшее решение.
    // Будем искать !только! положительный уровень опасности и максимально
    // близкий к заданному максимально допустимому значению. Погнали

    float dangerousLevel = 0.0001;   // максимально допустимое значение

    float valueD, valueX;
    float edgeUp = 0;
    float edgeDn = 4;
    cout.precision(7);
    do {
        valueX = (edgeDn + edgeUp) / 2.0;
        valueD = pow(valueX, 3) - 3 * pow(valueX, 2) - 12 * valueX + 10;
        valueD < 0.0 ? edgeDn = valueX : edgeUp = valueX;
        //cout << "Уровень опасности = " << fixed << valueD << endl;

    } while (valueD < 0.0 || valueD > dangerousLevel);

    cout << "Оптимальная глубина безопасной кладки: " << fixed << valueX << endl;
    cout << "Уровень опасности при этом = " << fixed << valueD << endl;

    return 0;
}